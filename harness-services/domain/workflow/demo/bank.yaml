apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: service-onboarding-template
  title: Service onboarding template
  description: Template for full project onboarding
  tags:
    - harness
    - recommended
    - service
spec:
  owner: cristian.ramirez@harness.io
  type: service

  parameters:
    - title: Project Setup
      description: Configure Harness organization and project settings
      required:
        - orgId
        - projectType
      properties:
        orgId:
          title: Harness Organization
          type: string
          description: Select Harness Organization
          ui:field: HarnessOrgPicker
          ui:autofocus: true

        projectType:
          title: Project Type
          type: string
          description: Select whether this is a new project or existing project
          enum:
            - new
            - existing
          ui:field: Select

        projectId:
          title: Select Existing Project
          type: string
          description: Select from available Harness projects
          ui:field: HarnessProjectPicker
          ui:options:
            orgId: ${{ parameters.orgId }}
          visible: ${{ parameters.projectType === 'existing' }}

        newProjectName:
          title: New Project Name
          type: string
          description: Name of the new project in Harness
          ui:widget: text
          visible: ${{ parameters.projectType === 'new' }}

    - title: Repository Setup
      description: Configure repository and application settings
      required:
        - repoName
        - programmingLanguage
        - scaffolderType
        - frameworkVersion
      properties:
        repoName:
          title: Repository Name
          type: string
          description: Name of the repository

        repoVisibility:
          title: Repository Visibility
          type: string
          description: Select repository visibility
          enum:
            - public
            - private
          default: private
          ui:field: Select

        programmingLanguage:
          title: Programming Language
          type: string
          description: Select the programming language
          enum:
            - java
            - node
            - python
            - go
          ui:field: Select
          
        scaffolderType:
          title: Framework Selection
          type: string
          description: Select the framework
          ui:field: Select
          ui:options:
            dependencies:
              programmingLanguage:
                java:
                  enum:
                    - spring-boot
                    - quarkus
                    - micronaut
                node:
                  enum:
                    - express
                    - nest
                    - fastify
                python:
                  enum:
                    - fastapi
                    - django
                    - flask
                go:
                  enum:
                    - gin
                    - echo
                    - fiber

        frameworkVersion:
          title: Framework Version
          type: string
          description: Select the framework version
          ui:field: Select
          ui:options:
            dependencies:
              scaffolderType:
                spring-boot:
                  enum:
                    - "3.4.3 (Latest)"
                    - "3.2.3 (LTS)"
                    - "2.7.18 (Legacy LTS)"
                express:
                  enum:
                    - "5.0.0 (Latest)"
                    - "4.18.2 (LTS)"
                fastapi:
                  enum:
                    - "0.109.0 (Latest)"
                    - "0.108.0 (Stable)"
                gin:
                  enum:
                    - "1.9.1 (Latest)"
                    - "1.8.2 (Stable)"

        artifactRegistry:
          title: Artifact Registry
          type: string
          description: Select the artifact registry for your container images
          enum:
            - docker-hub
            - gcr
            - ecr
            - jfrog
          ui:field: Select
          
  steps:
    - id: trigger
      name: Creating your python app
      action: trigger:harness-custom-pipeline
      input:
        url: https://app.harness.io/ng/account/EeRjnXTnS4GrLG5VNNJZUw/module/cd/orgs/demo/projects/Reference_Architecture/pipelines/DevX_Project_Provision/pipeline-studio?repoName=org.devx_provision&branch=main
        inputset:
          username: ${{ parameters.project_name }}
        apikey: ${{ parameters.token }}
  output:
    links:
      - title: Pipeline Details
        url: ${{ steps.trigger.output.PipelineUrl }}
