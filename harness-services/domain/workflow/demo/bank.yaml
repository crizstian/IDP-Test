apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: service-deployment-template
  title: Service Deployment Template
  description: Template for creating and deploying services with infrastructure provisioning
  tags:
    - harness
spec:
  owner: cristian.ramirez@harness.io
  type: service
  parameters:
    - title: Project Setup
      properties:  
        orgId:
          title: Org Identifier
          type: string
          ui:field: HarnessOrgPicker  
        newProject:
          title: Nuevo Proyecto
          type: boolean
          default: true
          ui:widget: radio
        token:
          title: Harness Token
          type: string
          ui:widget: password
          ui:field: HarnessAuthToken
      dependencies:
        newProject:
          allOf:
            - if:
                properties:
                  newProject:
                    const: true
              then:
                properties:
                  project_name:
                    title: New Project Name
                    type: string
                    description: Name of the new project in Harness
                    default: 'default'
            - if:
                properties:
                  newProject:
                    const: false
              then:
                properties:
                  projectId:
                    title: Project Identifier
                    description: Harness Project Identifier
                    type: string
                    ui:field: HarnessProjectPicker
                    default: 'default'
  
    - title: Infrastructure Setup
      properties:
        infrastructureType:
          title: Infrastructure Type
          type: string
          description: Select infrastructure type
          enum:
            - vm
            - kubernetes
      dependencies:
        infrastructureType:
          allOf:
            - if:
                properties:
                  infrastructureType:
                    const: vm
              then:
                properties:
                  vmConfiguration:
                      type: object
                      properties:
                        vmName:
                          title: VM Name
                          type: string
                        instanceType:
                          title: Instance Type
                          type: string
                          enum:
                            - n2-standard-2
                            - n2-standard-4
                            - n2-standard-8
                            - n2-standard-16
                          default: n2-standard-2
                        vmDisk:
                          title: Disk Size (GB)
                          type: number
                          enum:
                            - 30
                            - 50
                            - 100
                          default: 50
                        cloudProjectId:
                          title: Cloud Project ID
                          type: string
                          enum:
                            - bank-dev
                            - bank-sit
                          default: bank-dev
                          description: AWS ID/OpenShift Project/etc
                        zone:
                          title: Cloud Project ID
                          type: string
                          enum:
                            - us-central1-a
                            - us-central1-b
                            - us-central1-c
                          default: us-central1-a
                          description: AWS ID/OpenShift Project/etc
                        ports:
                          title: Available Ports
                          type: array
                          items:
                            type: string
                          default: ["80", "443"]
                required:
                  - vmConfiguration
            - if:
                properties:
                  infrastructureType:
                    const: kubernetes
              then:
                properties:
                  kubernetesConfiguration:
                      type: object
                      properties:
                        cluster:
                          title: Kubernetes Namespace
                          type: string
                          enum: ["dev", "sit"]
                          default: dev
                        namespace:
                          title: Kubernetes Namespace
                          type: string
                        createIngress:
                          title: Generate Kubernetes Ingress
                          type: boolean
                          default: true
                required:
                  - kubernetesConfiguration 

  steps:
    - id: project-provision
      name: Project Provision
      action: trigger:harness-custom-pipeline
      input:
        url: "https://app.harness.io/ng/account/EeRjnXTnS4GrLG5VNNJZUw/module/cd/orgs/sandbox/projects/CristianRamirez/pipelines/IDP_Provision_Project/pipeline-studio?storeType=INLINE"
        inputset:
          project_name: ${{ parameters.project_name }}
          orgId: ${{ parameters.orgId }}
          projectId: ${{ parameters.projectId }}
        apikey: ${{ parameters.token }}
    - id: infrastructure-provision
      name: infrastructure Provision
      action: trigger:harness-custom-pipeline
      input:
        url: "https://app.harness.io/ng/account/EeRjnXTnS4GrLG5VNNJZUw/module/cd/orgs/sandbox/projects/CristianRamirez/pipelines/IDP_Infrastructure_Setup/pipeline-studio?storeType=INLINE"
        inputset:
          infrastructureType: ${{ parameters.infrastructureType }}
          vmConfiguration: ${{ parameters.vmConfiguration }}
          kubernetesConfiguration: ${{ parameters.kubernetesConfiguration }}
        apikey: ${{ parameters.token }}
  output:
    links:
      - title: Pipeline Project Provision
        url: '${{ steps.project-provision.output.pipelineUrl }}'
      - title: Pipeline Infrastructure Provision
        url: '${{ steps.infrastructure-provision.output.pipelineUrl }}'
