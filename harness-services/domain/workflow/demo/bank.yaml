apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: full-onboarding-workflow
  title: Full Onboarding Kit - Harness-Repo-IaC
  description: Template for creating and deploying services with infrastructure provisioning
  tags:
    - harness
spec:
  owner: cristian.ramirez@harness.io
  type: service
  parameters:
    - title: Project Setup
      properties:  
        orgId:
          title: Org Identifier
          type: string
          ui:field: HarnessOrgPicker  
        newProject:
          title: Nuevo Proyecto
          type: boolean
          default: true
          ui:widget: radio
        token:
          title: Harness Token
          type: string
          ui:widget: password
          ui:field: HarnessAuthToken
      dependencies:
        newProject:
          allOf:
            - if:
                properties:
                  newProject:
                    const: true
              then:
                properties:
                  project_name:
                    title: New Project Name
                    type: string
                    description: Name of the new project in Harness
            - if:
                properties:
                  newProject:
                    const: false
              then:
                properties:
                  projectId:
                    title: Project Identifier
                    description: Harness Project Identifier
                    type: string
                    ui:field: HarnessProjectPicker
  
    - title: Repository Setup
      properties:  
        repoName:
          title: Repository Name
          type: string
          description: Name of the repository

        programmingLanguage:
          title: Programming Language
          type: string
          description: Select the programming language
          enum:
            - java
            - node
            - python
            - go
      dependencies:
        programmingLanguage:
          allOf:
            - if:
                properties:
                  programmingLanguage:
                    const: java
              then:
                properties:
                  codeSetup:
                    type: object
                    properties:
                      version:
                        title: Java Version
                        type: string
                        enum:
                        - "17"
                        - "11"
                        - "8"
                      scaffolderType:
                        title: Java Framework
                        type: string
                        enum:
                          - spring-boot
                          - quarkus
                          - micronaut
                      frameworkVersion:
                        title: Framework Version
                        type: string
                        enum:
                          - "3.4.3 (Latest)"
                          - "3.2.3 (LTS)"
                          - "2.7.18 (Legacy LTS)"
                required:
                  - codeSetup
            - if:
                properties:
                  programmingLanguage:
                    const: node
              then:
                properties:
                  codeSetup:
                    type: object
                    properties:
                      version:
                        title: Node.js Version
                        type: string
                        enum:
                          - "18"
                          - "17"
                          - "16"
                          - "15"
                          - "14"
                          - "13"
                          - "12"
                          - "11"
                      scaffolderType:
                        title: Node.js Framework
                        type: string
                        enum:
                          - express
                          - nest
                          - fastify
                      frameworkVersion:
                        title: Framework Version
                        type: string
                        enum:
                          - "5.0.0 (Latest)"
                          - "4.18.2 (LTS)"
                required:
                  - codeSetup
            - if:
                properties:
                  programmingLanguage:
                    const: python
              then:
                properties:
                  codeSetup:
                    type: object
                    properties:
                      version:
                        title: Python Version
                        type: string
                        enum:
                          - "3.12"
                          - "3.11"
                          - "3.10"
                          - "3.9"
                          - "3.8"
                          - "3.7"
                          - "3.6"
                          - "3.5"
                      scaffolderType:
                        title: Python Framework
                        type: string
                        enum:
                          - fastapi
                          - django
                          - flask
                      frameworkVersion:
                        title: Framework Version
                        type: string
                        enum:
                          - "0.109.0 (Latest)"
                          - "0.108.0 (Stable)"
                required:
                  - codeSetup
            - if:
                properties:
                  programmingLanguage:
                    const: go
              then:
                properties:
                  codeSetup:
                    type: object
                    properties:
                      version:
                        title: Go Version
                        type: string
                        enum:
                          - "1.21"
                          - "1.20"
                          - "1.19"
                          - "1.18"
                          - "1.17"
                          - "1.16"
                          - "1.15"
                          - "1.14"
                      scaffolderType:
                        title: Go Framework
                        type: string
                        enum:
                          - gin
                          - echo
                          - fiber
                      frameworkVersion:
                        title: Framework Version
                        type: string
                        enum:
                          - "1.9.1 (Latest)"
                          - "1.8.2 (Stable)"
                required:
                  - codeSetup

    - title: Infrastructure Setup
      properties:
        infrastructureType:
          title: Infrastructure Type
          type: string
          description: Select infrastructure type
          enum:
            - vm
            - kubernetes
      dependencies:
        infrastructureType:
          allOf:
            - if:
                properties:
                  infrastructureType:
                    const: vm
              then:
                properties:
                  vmConfiguration:
                      type: object
                      properties:
                        vmName:
                          title: VM Name
                          type: string
                        instanceType:
                          title: Instance Type
                          type: string
                          enum:
                            - n2-standard-2
                            - n2-standard-4
                            - n2-standard-8
                            - n2-standard-16
                          default: n2-standard-2
                        vmDisk:
                          title: Disk Size (GB)
                          type: number
                          enum:
                            - 30
                            - 50
                            - 100
                          default: 50
                        cloudProjectId:
                          title: Cloud Project ID
                          type: string
                          enum:
                            - bank-dev
                            - bank-sit
                          default: bank-dev
                          description: AWS ID/OpenShift Project/etc
                        zone:
                          title: Cloud Project ID
                          type: string
                          enum:
                            - us-central1-a
                            - us-central1-b
                            - us-central1-c
                          default: us-central1-a
                          description: AWS ID/OpenShift Project/etc
                        ports:
                          title: Available Ports
                          type: array
                          items:
                            type: string
                          default: ["80", "443"]
                required:
                  - vmConfiguration
            - if:
                properties:
                  infrastructureType:
                    const: kubernetes
              then:
                properties:
                  kubernetesConfiguration:
                      type: object
                      properties:
                        cluster:
                          title: Kubernetes Cluster
                          type: string
                          enum:
                            - sesandboxkubernetes
                            - latamsandboxkubernetes
                            - ne
                            - ns
                          enumNames:
                            - SE Sandbox
                            - SE Latam GKE
                          default: dev
                        namespace:
                          title: Kubernetes Namespace
                          type: string
                        createIngress:
                          title: Generate Kubernetes Ingress
                          type: boolean
                          default: true
                        containerReplicas:
                          title: Container replicas
                          type: string
                          default: "3"
                        containers:
                          title: Container Resources
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                title: Container name
                                type: string
                              CPU:
                                title: Container CPU
                                type: string
                                enum: ["100m","200m","300m","400m","500m", "1000m", "1500m", "2000m"]
                                default: 500m
                              Memory:
                                title: Container Memory
                                type: string
                                enum: ["256Mi", "512Mi", "1Gi", "1.5Gi", "2Gi", "4Gi", "8Gi", "16Gi"]
                                default: 512Mi
                          default: []
                                
                required:
                  - kubernetesConfiguration 

  steps:
    - id: project-provision
      name: Project Provision
      action: trigger:harness-custom-pipeline
      input:
        url: "https://app.harness.io/ng/account/EeRjnXTnS4GrLG5VNNJZUw/module/cd/orgs/sandbox/projects/CristianRamirez/pipelines/IDP_Provision_Project/pipeline-studio?storeType=INLINE"
        inputset:
          project_name: ${{ parameters.project_name }}
          orgId: ${{ parameters.orgId }}
          projectId: ${{ parameters.projectId }}
          programmingLanguage: ${{ parameters.programmingLanguage }}
        apikey: ${{ parameters.token }}
    - id: repository-provision
      name: repository Provision
      action: trigger:harness-custom-pipeline
      input:
        url: "https://app.harness.io/ng/account/EeRjnXTnS4GrLG5VNNJZUw/module/cd/orgs/sandbox/projects/CristianRamirez/pipelines/IDPRepoOnboarding/pipeline-studio?storeType=INLINE"
        inputset:
          # project: ${{ steps.project-provision.output['pipeline.stages.IDP.spec.execution.steps.Print_vars.output.outputVariables.project'] }}
          project_name: ${{ parameters.project_name }}
          orgId: ${{ parameters.orgId }}
          projectId: ${{ parameters.projectId }}
          programmingLanguage: ${{ parameters.programmingLanguage }}
          template: ${{ parameters.codeSetup }}
          repoName: ${{ parameters.repoName }}
          repoDefaultBranch: "main"
          repoDescription: "demo"
          namespace: ${{ parameters.kubernetesConfiguration.namespace }}
        apikey: ${{ parameters.token }} 
    - id: infrastructure-provision
      name: infrastructure Provision
      action: trigger:harness-custom-pipeline
      input:
        url: "https://app.harness.io/ng/account/EeRjnXTnS4GrLG5VNNJZUw/module/cd/orgs/sandbox/projects/CristianRamirez/pipelines/IDP_Infrastructure_Setup/pipeline-studio?storeType=INLINE"
        inputset:
          infrastructureType: ${{ parameters.infrastructureType }}
          vmConfiguration: ${{ parameters.vmConfiguration }}
          kubernetesConfiguration: ${{ parameters.kubernetesConfiguration }}
          repoName: ${{ parameters.repoName }}
        apikey: ${{ parameters.token }}       
    - id: cleanup-environment
      name: Clean Demo Resources
      action: trigger:harness-custom-pipeline
      input:
        url: "https://app.harness.io/ng/account/EeRjnXTnS4GrLG5VNNJZUw/all/orgs/sandbox/projects/CristianRamirez/pipelines/IDP_Clean_Environment/pipeline-studio?storeType=INLINE"
        inputset:
          project_name: ${{ parameters.project_name }}
          orgId: ${{ parameters.orgId }}
          projectId: ${{ parameters.projectId }}
          repoName: ${{ parameters.repoName }}
        apikey: ${{ parameters.token }}       
  output:
    links:
      - title: Pipeline Project Provision
        url: '${{ steps.project-provision.output.pipelineUrl }}'
      - title: Pipeline Infrastructure Provision
        url: '${{ steps.repository-provision.output.pipelineUrl }}'
      - title: Pipeline Repository Provision
        url: '${{ steps.infrastructure-provision.output.pipelineUrl }}'
      - title: Pipeline Repository Provision
        url: '${{ steps.cleanup-environment.output.pipelineUrl }}'
